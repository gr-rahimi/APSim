{% macro single_bram_macro36(stride_idx, contents) %}
{#
@param stride_idx : stride index form 0  to stride_value - 1
#}

   // BRAM_SINGLE_MACRO: Single Port RAM
   //                    Virtex-7
   // Xilinx HDL Language Template, version 2018.2

   /////////////////////////////////////////////////////////////////////
   //  READ_WIDTH | BRAM_SIZE | READ Depth  | ADDR Width |            //
   // WRITE_WIDTH |           | WRITE Depth |            |  WE Width  //
   // ============|===========|=============|============|============//
   //    37-72    |  "36Kb"   |      512    |    9-bit   |    8-bit   //
   //    19-36    |  "36Kb"   |     1024    |   10-bit   |    4-bit   //
   //    19-36    |  "18Kb"   |      512    |    9-bit   |    4-bit   //
   //    10-18    |  "36Kb"   |     2048    |   11-bit   |    2-bit   //
   //    10-18    |  "18Kb"   |     1024    |   10-bit   |    2-bit   //
   //     5-9     |  "36Kb"   |     4096    |   12-bit   |    1-bit   //
   //     5-9     |  "18Kb"   |     2048    |   11-bit   |    1-bit   //
   //     3-4     |  "36Kb"   |     8192    |   13-bit   |    1-bit   //
   //     3-4     |  "18Kb"   |     4096    |   12-bit   |    1-bit   //
   //       2     |  "36Kb"   |    16384    |   14-bit   |    1-bit   //
   //       2     |  "18Kb"   |     8192    |   13-bit   |    1-bit   //
   //       1     |  "36Kb"   |    32768    |   15-bit   |    1-bit   //
   //       1     |  "18Kb"   |    16384    |   14-bit   |    1-bit   //
   /////////////////////////////////////////////////////////////////////

   BRAM_SINGLE_MACRO #(
      .BRAM_SIZE("36Kb"), // Target BRAM, "18Kb" or "36Kb"
      .DEVICE("7SERIES"), // Target Device: "7SERIES"
      .DO_REG(0), // Optional output register (0 or 1)
      .INIT(72'h000000000000000000), // Initial values on output port
      .INIT_FILE ("NONE"),
      .WRITE_WIDTH(72), // Valid values are 1-72 (37-72 only valid when BRAM_SIZE="36Kb")
      .READ_WIDTH(72),  // Valid values are 1-72 (37-72 only valid when BRAM_SIZE="36Kb")
      .SRVAL(72'h000000000000000000), // Set/Reset value for port output
      .WRITE_MODE("NO_CHANGE"), // "WRITE_FIRST", "READ_FIRST", or "NO_CHANGE"
      .INIT_00(256'h{{contents[1 - 1] }}),
      .INIT_01(256'h{{contents[2 - 1] }}),
      .INIT_02(256'h{{contents[3 - 1] }}),
      .INIT_03(256'h{{contents[4 - 1] }}),
      .INIT_04(256'h{{contents[5 - 1] }}),
      .INIT_05(256'h{{contents[6 - 1] }}),
      .INIT_06(256'h{{contents[7 - 1] }}),
      .INIT_07(256'h{{contents[8 - 1] }}),
      .INIT_08(256'h{{contents[9 - 1] }}),
      .INIT_09(256'h{{contents[10 - 1] }}),
      .INIT_0A(256'h{{contents[11 - 1] }}),
      .INIT_0B(256'h{{contents[12 - 1] }}),
      .INIT_0C(256'h{{contents[13 - 1] }}),
      .INIT_0D(256'h{{contents[14 - 1] }}),
      .INIT_0E(256'h{{contents[15 - 1] }}),
      .INIT_0F(256'h{{contents[16 - 1] }}),
      .INIT_10(256'h{{contents[17 - 1] }}),
      .INIT_11(256'h{{contents[18 - 1] }}),
      .INIT_12(256'h{{contents[19 - 1] }}),
      .INIT_13(256'h{{contents[20 - 1] }}),
      .INIT_14(256'h{{contents[21 - 1] }}),
      .INIT_15(256'h{{contents[22 - 1] }}),
      .INIT_16(256'h{{contents[23 - 1] }}),
      .INIT_17(256'h{{contents[24 - 1] }}),
      .INIT_18(256'h{{contents[25 - 1] }}),
      .INIT_19(256'h{{contents[26 - 1] }}),
      .INIT_1A(256'h{{contents[27 - 1] }}),
      .INIT_1B(256'h{{contents[28 - 1] }}),
      .INIT_1C(256'h{{contents[29 - 1] }}),
      .INIT_1D(256'h{{contents[30 - 1] }}),
      .INIT_1E(256'h{{contents[31 - 1] }}),
      .INIT_1F(256'h{{contents[32 - 1] }}),
      .INIT_20(256'h{{contents[33 - 1] }}),
      .INIT_21(256'h{{contents[34 - 1] }}),
      .INIT_22(256'h{{contents[35 - 1] }}),
      .INIT_23(256'h{{contents[36 - 1] }}),
      .INIT_24(256'h{{contents[37 - 1] }}),
      .INIT_25(256'h{{contents[38 - 1] }}),
      .INIT_26(256'h{{contents[39 - 1] }}),
      .INIT_27(256'h{{contents[40 - 1] }}),
      .INIT_28(256'h{{contents[41 - 1] }}),
      .INIT_29(256'h{{contents[42 - 1] }}),
      .INIT_2A(256'h{{contents[43 - 1] }}),
      .INIT_2B(256'h{{contents[44 - 1] }}),
      .INIT_2C(256'h{{contents[45 - 1] }}),
      .INIT_2D(256'h{{contents[46 - 1] }}),
      .INIT_2E(256'h{{contents[47 - 1] }}),
      .INIT_2F(256'h{{contents[48 - 1] }}),
      .INIT_30(256'h{{contents[49 - 1] }}),
      .INIT_31(256'h{{contents[50 - 1] }}),
      .INIT_32(256'h{{contents[51 - 1] }}),
      .INIT_33(256'h{{contents[52 - 1] }}),
      .INIT_34(256'h{{contents[53 - 1] }}),
      .INIT_35(256'h{{contents[54 - 1] }}),
      .INIT_36(256'h{{contents[55 - 1] }}),
      .INIT_37(256'h{{contents[56 - 1] }}),
      .INIT_38(256'h{{contents[57 - 1] }}),
      .INIT_39(256'h{{contents[58 - 1] }}),
      .INIT_3A(256'h{{contents[59 - 1] }}),
      .INIT_3B(256'h{{contents[60 - 1] }}),
      .INIT_3C(256'h{{contents[61 - 1] }}),
      .INIT_3D(256'h{{contents[62 - 1] }}),
      .INIT_3E(256'h{{contents[63 - 1] }}),
      .INIT_3F(256'h{{contents[64 - 1] }}),

      // The next set of INIT_xx are valid when configured as 36Kb
      .INIT_40(256'h{{contents[65 - 1] }}),
      .INIT_41(256'h{{contents[66 - 1] }}),
      .INIT_42(256'h{{contents[67 - 1] }}),
      .INIT_43(256'h{{contents[68 - 1] }}),
      .INIT_44(256'h{{contents[69 - 1] }}),
      .INIT_45(256'h{{contents[70 - 1] }}),
      .INIT_46(256'h{{contents[71 - 1] }}),
      .INIT_47(256'h{{contents[72 - 1] }}),
      .INIT_48(256'h{{contents[73 - 1] }}),
      .INIT_49(256'h{{contents[74 - 1] }}),
      .INIT_4A(256'h{{contents[75 - 1] }}),
      .INIT_4B(256'h{{contents[76 - 1] }}),
      .INIT_4C(256'h{{contents[77 - 1] }}),
      .INIT_4D(256'h{{contents[78 - 1] }}),
      .INIT_4E(256'h{{contents[79 - 1] }}),
      .INIT_4F(256'h{{contents[80 - 1] }}),
      .INIT_50(256'h{{contents[81 - 1] }}),
      .INIT_51(256'h{{contents[82 - 1] }}),
      .INIT_52(256'h{{contents[83 - 1] }}),
      .INIT_53(256'h{{contents[84 - 1] }}),
      .INIT_54(256'h{{contents[85 - 1] }}),
      .INIT_55(256'h{{contents[86 - 1] }}),
      .INIT_56(256'h{{contents[87 - 1] }}),
      .INIT_57(256'h{{contents[88 - 1] }}),
      .INIT_58(256'h{{contents[89 - 1] }}),
      .INIT_59(256'h{{contents[90 - 1] }}),
      .INIT_5A(256'h{{contents[91 - 1] }}),
      .INIT_5B(256'h{{contents[92 - 1] }}),
      .INIT_5C(256'h{{contents[93 - 1] }}),
      .INIT_5D(256'h{{contents[94 - 1] }}),
      .INIT_5E(256'h{{contents[95 - 1] }}),
      .INIT_5F(256'h{{contents[96 - 1] }}),
      .INIT_60(256'h{{contents[97 - 1] }}),
      .INIT_61(256'h{{contents[98 - 1] }}),
      .INIT_62(256'h{{contents[99 - 1] }}),
      .INIT_63(256'h{{contents[100 - 1] }}),
      .INIT_64(256'h{{contents[101 - 1] }}),
      .INIT_65(256'h{{contents[102 - 1] }}),
      .INIT_66(256'h{{contents[103 - 1] }}),
      .INIT_67(256'h{{contents[104 - 1] }}),
      .INIT_68(256'h{{contents[105 - 1] }}),
      .INIT_69(256'h{{contents[106 - 1] }}),
      .INIT_6A(256'h{{contents[107 - 1] }}),
      .INIT_6B(256'h{{contents[108 - 1] }}),
      .INIT_6C(256'h{{contents[109 - 1] }}),
      .INIT_6D(256'h{{contents[110 - 1] }}),
      .INIT_6E(256'h{{contents[111 - 1] }}),
      .INIT_6F(256'h{{contents[112 - 1] }}),
      .INIT_70(256'h{{contents[113 - 1] }}),
      .INIT_71(256'h{{contents[114 - 1] }}),
      .INIT_72(256'h{{contents[115 - 1] }}),
      .INIT_73(256'h{{contents[116 - 1] }}),
      .INIT_74(256'h{{contents[117 - 1] }}),
      .INIT_75(256'h{{contents[118 - 1] }}),
      .INIT_76(256'h{{contents[119 - 1] }}),
      .INIT_77(256'h{{contents[120 - 1] }}),
      .INIT_78(256'h{{contents[121 - 1] }}),
      .INIT_79(256'h{{contents[122 - 1] }}),
      .INIT_7A(256'h{{contents[123 - 1] }}),
      .INIT_7B(256'h{{contents[124 - 1] }}),
      .INIT_7C(256'h{{contents[125 - 1] }}),
      .INIT_7D(256'h{{contents[126 - 1] }}),
      .INIT_7E(256'h{{contents[127 - 1] }}),
      .INIT_7F(256'h{{contents[128 - 1] }}),

      // The next set of INITP_xx are for the parity bits
      .INITP_00(256'h{{contents[129 - 1] }}),
      .INITP_01(256'h{{contents[130 - 1] }}),
      .INITP_02(256'h{{contents[131 - 1] }}),
      .INITP_03(256'h{{contents[132 - 1] }}),
      .INITP_04(256'h{{contents[133 - 1] }}),
      .INITP_05(256'h{{contents[134 - 1] }}),
      .INITP_06(256'h{{contents[135 - 1] }}),
      .INITP_07(256'h{{contents[136 - 1] }}),

      // The next set of INIT_xx are valid when configured as 36Kb
      .INITP_08(256'h{{contents[137 - 1] }}),
      .INITP_09(256'h{{contents[138 - 1] }}),
      .INITP_0A(256'h{{contents[139 - 1] }}),
      .INITP_0B(256'h{{contents[140 - 1] }}),
      .INITP_0C(256'h{{contents[141 - 1] }}),
      .INITP_0D(256'h{{contents[142 - 1] }}),
      .INITP_0E(256'h{{contents[143 - 1] }}),
      .INITP_0F(256'h{{contents[144 - 1] }})
   ) BRAM_SINGLE_MACRO_stride{{stride_idx}} (
      .DO(bram_out_vector[{{stride_idx}}]),       // Output data, width defined by READ_WIDTH parameter
      .ADDR({1'b0, input_capture[{{(stride_idx + 1) * 8 - 1}}:{{stride_idx * 8}}]}),   // Input address, width defined by read/write port depth
      .CLK(clk),     // 1-bit input clock
      .DI(72'h000000000000000000),       // Input data port, width defined by WRITE_WIDTH parameter
      .EN(1'b1),       // 1-bit input RAM enable
      .REGCE(1'b0), // 1-bit input output register enable
      .RST(1'b0),     // 1-bit input reset
      .WE(1'b0)        // Input write enable, width defined by write port depth
   );


   // End of BRAM_SINGLE_MACRO_inst instantiation
{% endmacro %}